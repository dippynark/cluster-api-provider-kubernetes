images:
# Use `make docker-build` to build this image
- name: dippynark/cluster-api-kubernetes-controller:dev
  loadBehavior: mustLoad
# Use `make e2e_pull` to retrieve these images
- name: gcr.io/k8s-staging-cluster-api/cluster-api-controller:v0.3.2
  loadBehavior: tryLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller:v0.3.2
  loadBehavior: tryLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller:v0.3.2
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-webhook:v0.11.1
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-controller:v0.11.1
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-cainjector:v0.11.1
  loadBehavior: tryLoad
components:
# Load the cert-manager and wait for all of its pods and service to become available
- name: cert-manager
  sources:
  - type: url
    value: https://github.com/jetstack/cert-manager/releases/download/v0.11.1/cert-manager.yaml
  waiters:
  - type: service
    value: v1beta1.webhook.cert-manager.io
  - value: cert-manager
# Load CAPI components and wait for its pods to become available
- name: capi
  sources:
  - type: url
    value: https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.2/cluster-api-components.yaml
  waiters:
  - value: capi-system
# Load CAPK and wait for its pods to become available.
- name: capk
  sources:
  - value: ../config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  # TODO: use aggregation label when available
  # https://github.com/kubernetes-sigs/cluster-api/pull/2685
  - value: ../config/kubeadm-control-plane-rbac
  waiters:
  - value: capk-system
